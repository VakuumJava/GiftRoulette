// fetch-stickers.cjs
require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const fs         = require('fs');
const path       = require('path');
const axios      = require('axios');
const zlib       = require('zlib');

const BOT_TOKEN = process.env.BOT_TOKEN;
const PACK_NAME = process.env.PACK_NAME;

if (!BOT_TOKEN || !PACK_NAME) {
  console.error('‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ .env: BOT_TOKEN –∏ PACK_NAME');
  process.exit(1);
}

const bot = new TelegramBot(BOT_TOKEN, { polling: false });

async function dumpStickerPack() {
  const { stickers } = await bot.getStickerSet(PACK_NAME);

  // –ü–∞–ø–∫–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
  const animDir = path.join(__dirname, 'animations');
  if (!fs.existsSync(animDir)) fs.mkdirSync(animDir);

  const prizes = [];
  for (const s of stickers) {
    // 1) –∫–∞—á–∞–µ–º .tgs
    const tgsUrl   = await bot.getFileLink(s.file_id);
    const response = await axios.get(tgsUrl, { responseType: 'arraybuffer' });
    // 2) —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º gzip ‚Üí JSON
    const buffer   = Buffer.from(response.data);
    const jsonBuf  = zlib.gunzipSync(buffer);
    const animData = JSON.parse(jsonBuf.toString('utf-8'));
    // 3) —Å–æ—Ö—Ä–∞–Ω—è–µ–º Lottie-JSON
    const animPath = `animations/${s.file_unique_id}.json`;
    fs.writeFileSync(path.join(__dirname, animPath),
                     JSON.stringify(animData, null, 2),
                     'utf-8');
    console.log(`‚úÖ –°–æ—Ö—Ä–∞–Ω—ë–Ω ${animPath}`);

    // 4) –¥–æ–±–∞–≤–ª—è–µ–º –≤ prizes.json
    prizes.push({
      name:   s.emoji || 'NFT',
      img:    animPath,   // —Ç–µ–ø–µ—Ä—å —É–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ JSON
      weight: 1
    });
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π JSON
  fs.writeFileSync(
    path.join(__dirname, 'prizes.json'),
    JSON.stringify(prizes, null, 2),
    'utf-8'
  );
  console.log(`üéâ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${prizes.length} –ø—Ä–∏–∑–æ–≤ –≤ prizes.json`);
}

dumpStickerPack().catch(err => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', err);
  process.exit(1);
});